// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.1
// source: tenant_policy.sql

package db

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const createTenantPolicy = `-- name: CreateTenantPolicy :one
INSERT INTO tenant_policy (name,group_id) VALUES ($1,$2) RETURNING id, name, group_id, created_at
`

type CreateTenantPolicyParams struct {
	Name    string      `json:"name"`
	GroupID pgtype.UUID `json:"group_id"`
}

func (q *Queries) CreateTenantPolicy(ctx context.Context, arg CreateTenantPolicyParams) (TenantPolicy, error) {
	row := q.db.QueryRow(ctx, createTenantPolicy, arg.Name, arg.GroupID)
	var i TenantPolicy
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.GroupID,
		&i.CreatedAt,
	)
	return i, err
}

const getTenantPolicy = `-- name: GetTenantPolicy :one
SELECT id, name, group_id, created_at FROM tenant_policy WHERE id = $1
`

func (q *Queries) GetTenantPolicy(ctx context.Context, id uuid.UUID) (TenantPolicy, error) {
	row := q.db.QueryRow(ctx, getTenantPolicy, id)
	var i TenantPolicy
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.GroupID,
		&i.CreatedAt,
	)
	return i, err
}
